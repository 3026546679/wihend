<template>
	<view class="n-flex-1 n-full-height n-bg-inverse n-position-relative">
		<n-navbar :lefts="leftIcons" bgType="none" @leftAction="navLeftAction"></n-navbar>
		<view style="margin-top: 66rpx;margin-left: 75rpx;">
			<text class="n-weight-7" style="font-size: 60rpx;line-height: 84rpx;">忘记密码</text>
		</view>
		<view style="margin-left: 75rpx;margin-top: 30rpx;">
			<text class="n-size-s n-color-third n-lh-s">请输入手机号码和验证码找回密码</text>
		</view>
		<n-input v-model="phone" type="number" :maxlength="11" placeholder="请输入手机号" bgType="light" radius="ll" boxStyle="height:92rpx;margin-left:75rpx;margin-right:75rpx;margin-top:120rpx;padding-left:30rpx;padding-right:30rpx;"></n-input>
		<n-input v-model="password" :isPassword="true" :password="pwdNoVisible" :indicator="rightEye" placeholder="请输入新密码" bgType="light" radius="ll" boxStyle="height:92rpx;margin-left:75rpx;margin-right:75rpx;margin-top:30rpx;padding-left:30rpx;padding-right:30rpx;" @indicatorClicked="togglePwdVisible"></n-input>
		<n-input v-model="code" type="number" :maxlength="6" placeholder="请输入短信验证码" bgType="light" radius="ll" boxStyle="height:92rpx;margin-left:75rpx;margin-right:75rpx;margin-top:30rpx;padding-left:30rpx;">
			<view slot="extra" class="n-border-left">
				<n-button :text="second?(second+'s'):'获取'" textType="error" textSize="base" boxStyle="width:130rpx;height:72rpx;" @buttonClicked="toGetCode"></n-button>
			</view>
		</n-input>
		<view class="n-flex-row n-justify-center" style="margin-top: 66rpx;">
			<n-button text="确认" textType="inverse" textSize="l" bgType="gradient" radius="ll" boxStyle="width:600rpx;height:92rpx;"></n-button>
		</view>
	</view>
</template>

<script>
	import navHelper from '@/service/navHelper.js'
	
	export default {
		mixins: [navHelper],
		data() {
			return {
				phone: '',
				code: '',
				second: 0,
				pwdNoVisible: true
			}
		},
		computed: {
			rightEye() {
				return this.pwdNoVisible ? 'eye' : 'eye-close'
			}
		},
		methods: {
			togglePwdVisible() {
				this.pwdNoVisible = !this.pwdNoVisible
			},
			toGetCode() {
				if (this.second > 0) return;
				this.second = 60
				this.timer = setInterval(()=>{
					this.second -= 1
					if (this.second <= 0) {
						this.second = 0
						this.timer && clearInterval(this.timer)
						this.timer = null
					}
				}, 1000)
			}
		},
		onUnload() {
			this.timer && clearInterval(this.timer)
		}
	}
</script>

<style>

</style>
